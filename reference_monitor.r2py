"""
This security layer inadequately handles A/B storage for files in RepyV2.



Note:
    This security layer uses encasementlib.r2py, restrictions.default, repy.py and Python
    Also you need to give it an application to run.
    python repy.py restrictions.default encasementlib.r2py [security_layer].r2py [attack_program].r2py 
    
    """ 
TYPE="type"
ARGS="args"
RETURN="return"
EXCP="exceptions"
TARGET="target"
FUNC="func"
OBJC="objc"

class ABFile():
  def __init__(self,filename,create):
    # globals
    mycontext['debug'] = False
    # local (per object) reference to the underlying file
    self.Afn = filename+'.a'
    self.Bfn = filename+'.b'

    if create: 
        self.Afile = openfile(self.Afn, create)
        self.Bfile = openfile(self.Bfn, create)
        
  def writeat(self,data,offset):
    self.Bfile.writeat(data, offset)

  def readat(self,bytes,offset):
    return self.Afile.readat(bytes, offset)

  def close(self):
    if(file_status(self.Afile) and file_status(self.Bfile)): 
        self.Afile.writeat(self.Bfile.readat(None, 0)
    else: 
        self.Bfile.writeat(self.Afile.readat(None, 0)
    self.Afile.close()
    self.Bfile.close()
    
    
def ABopenfile(filename, create):
  return ABFile(filename,create)

def file_check(file):
    first = file.readat(1, 0)
    if(first == 'S'): 
        size = 0
   try: 
    while(file.readat(1, size)):
        size += 1
            except SeekPastEndOfFileError: 
    last = file.readat(1, size - 2)
        if(last == 'E'): 
            return True
    return False

# The code here sets up type checking and variable hiding for you.  You
# should not need to change anything below here.
sec_file_def = {"obj-type":ABFile,
                "name":"ABFile",
                "writeat":{"type":"func","args":(str,(int,long)),"exceptions":Exception,"return":(int,type(None)),"target":ABFile.writeat},
                "readat":{"type":"func","args":((int,long,type(None)),(int,long)),"exceptions":Exception,"return":str,"target":ABFile.readat},
                "close":{"type":"func","args":None,"exceptions":None,"return":(bool,type(None)),"target":ABFile.close}
           }

CHILD_CONTEXT_DEF["ABopenfile"] = {TYPE:OBJC,ARGS:(str,bool),EXCP:Exception,RETURN:sec_file_def,TARGET:ABopenfile}

# Execute the user code
secure_dispatch_module()
